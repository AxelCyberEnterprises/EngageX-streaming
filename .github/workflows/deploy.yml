name: Deploy Django + Celery + Flower to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECR_REPOSITORY_CELERY: ${{ secrets.ECR_REPOSITORY_CELERY }}
  ECR_REPOSITORY_FLOWER: ${{ secrets.ECR_REPOSITORY_FLOWER }}
  IMAGE_TAG: latest

  # PostgreSQL
  POSTGRESQL_DATABASE_NAME: ${{ secrets.POSTGRESQL_DATABASE_NAME }}
  POSTGRESQL_USERNAME: ${{ secrets.POSTGRESQL_USERNAME }}
  POSTGRESQL_SERVER_NAME: ${{ secrets.POSTGRESQL_SERVER_NAME }}
  POSTGRESQL_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
  PORT: 5432

  # OpenAI and Deepgram API Keys
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  DEEPGRAM_API_KEY: ${{ secrets.DEEPGRAM_API_KEY }}

  # AWS SES Config
  EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
  EMAIL_PORT: 587
  EMAIL_USE_TLS: true
  EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}

  # AWS S3 Config
  USE_S3: true
  AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
  AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # Intuit Config
  INTUIT_VERIFIER_TOKEN: ${{ secrets.INTUIT_VERIFIER_TOKEN }}
  INTUIT_CLIENT_ID: ${{ secrets.INTUIT_CLIENT_ID }}
  INTUIT_CLIENT_SECRET: ${{ secrets.INTUIT_CLIENT_SECRET }}
  NEW_INTUIT_REDIRECT_URI: ${{ secrets.NEW_INTUIT_REDIRECT_URI }}
  INTUIT_ENVIRONMENT: ${{ secrets.INTUIT_ENVIRONMENT }}

  # Stripe Config
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

  # Redis URL
  REDIS_URL: ${{ secrets.REDIS_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Tag Docker Images
        run: |
          docker build -t django-app -f Dockerfile .
          docker tag django-app $ECR_REPOSITORY:$IMAGE_TAG

          docker build -t celery-worker -f Dockerfile .
          docker tag celery-worker $ECR_REPOSITORY_CELERY:$IMAGE_TAG

          docker build -t flower-monitor -f Dockerfile .
          docker tag flower-monitor $ECR_REPOSITORY_FLOWER:$IMAGE_TAG

      - name: Push Docker Images to ECR
        run: |
          docker push $ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REPOSITORY_CELERY:$IMAGE_TAG
          docker push $ECR_REPOSITORY_FLOWER:$IMAGE_TAG